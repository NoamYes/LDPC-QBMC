% Author : Miroslav Marinkovic
% E-mail : mmarinkovic78d@gmail.com
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Create the parity check matrix for code rate 1/2, 2/3, 3/4 and 5/6
% IEEE 802.11n standard

function [H_index] = generate_ldpc_matrix_80211n(n, code_rate)

% Each H_index matrix has 24 columns (from hc1 to hc24)
% n - submatrix size
% n = 27; block_size = 648;
% n = 54; block_size = 1296;
% n = 81; block_size = 1944;

if (n ~= 27 && n ~= 54 && n ~= 81)
  error('ldpc_matrix_80211n error: sub-matrix size is not supported');
end

if n == 27
  switch code_rate
    
    case 1/2
      hc1 = [0; 22; 6; 2; 23; 24; 25; 13; 7; 11; 25; 3];
      hc2 = [-1; 0; -1; -1; -1; -1; -1; 24; 20; -1; -1; -1];
      hc3 = [-1; -1; 0; -1; -1; 23; -1; -1; -1; -1; 8; -1];
      hc4 = [-1; -1; -1; 0; -1; 1; -1; -1; 16; -1; -1; -1];
      hc5 = [0; 17; 10; 20; 3; 17; 8; 0; 22; 19; 23; 16];
      hc6 = [0; -1; -1; -1; -1; -1; -1; -1; 10; -1; 18; -1];
      hc7 = [-1; 0; -1; -1; -1; 3; -1; 8; -1; -1; -1; -1];
      hc8 = [-1; 0; -1; -1; -1; -1; -1; -1; -1; -1; 14; 2];
      hc9 = [0; 12; 24; 25; 0; 10; 7; 6; 23; 13; 9; 25];
      hc10 = [-1; -1; -1; 0; -1; -1; 18; -1; -1; -1; -1; 5];
      hc11 = [-1; -1; 0; -1; 9; -1; -1; -1; -1; 3; -1; -1];
      hc12 = [0; -1; -1; -1; 11; -1; -1; -1; -1; 17; -1; -1];
      hc13 = [-1; -1; -1; -1; -1; -1; 0; -1; -1; -1; -1; -1];
      hc14 = [0; 0; -1; -1; -1; -1; -1; -1; -1; -1; -1; -1];
      hc15 = [-1; 0; 0; -1; -1; -1; -1; -1; -1; -1; -1; -1];
      hc16 = [-1; -1; 0; 0; -1; -1; -1; -1; -1; -1; -1; -1];
      hc17 = [-1; -1; -1; 0; -1; -1; -1; -1; -1; -1; -1; -1];
      hc18 = [-1; -1; -1; -1; 0; 0; -1; -1; -1; -1; -1; -1];
      hc19 = [-1; -1; -1; -1; -1; 0; 0; -1; -1; -1; -1; -1];
      hc20 = [-1; -1; -1; -1; -1; -1; 0; 0; -1; -1; -1; -1];
      hc21 = [-1; -1; -1; -1; -1; -1; -1; 0; 0; -1; -1; -1];
      hc22 = [-1; -1; -1; -1; -1; -1; -1; -1; 0; 0; -1; -1];
      hc23 = [-1; -1; -1; -1; -1; -1; -1; -1; -1; 0; 0; -1];
      hc24 = [-1; -1; -1; -1; -1; -1; -1; -1; -1; -1; 0; 0];
      
      H_index = cat(2,hc1,hc2,hc3,hc4,hc5,hc6,hc7,hc8,hc9,hc10,hc11,hc12,...
        hc13,hc14,hc15,hc16,hc17,hc18,hc19,hc20,hc21,hc22,hc23,hc24);
      
    case 2/3
      hc1 = [25; 10; 16; 10; 23; 6; 14; 17];
      hc2 = [26; 9; 2; 13; 14; 22; 23; 11];
      hc3 = [14; 15; 20; 5; 24; 9; 21; 11];
      hc4 = [-1; 11; 26; 0; -1; 20; 11; 20];
      hc5 = [20; -1; 21; -1; 12; -1; 20; -1];
      hc6 = [-1; 0; -1; 3; -1; 25; -1; 21];
      hc7 = [2; -1; 6; -1; 19; -1; 24; -1];
      hc8 = [-1; 1; -1; 7; -1; 17; -1; 26];
      hc9 = [4; -1; 1; -1; 17; -1; 18; -1];
      hc10 = [-1; -1; 26; -1; -1; 8; -1; 3];
      hc11 = [-1; 18; -1; 26; -1; -1; 19; -1];
      hc12 = [8; -1; 7; -1; -1; 14; -1; -1];
      hc13 = [-1; 8; -1; -1; 20; -1; -1; 18];
      hc14 = [16; -1; -1; 13; -1; 18; -1; -1];
      hc15 = [-1; 10; -1; -1; 21; -1; -1; 26];
      hc16 = [18; -1; -1; 16; -1; -1; 22; -1];
      hc17 = [1; -1; -1; -1; 0; -1; -1; 1];
      hc18 = [0; 0; -1; -1; -1; -1; -1; -1];
      hc19 = [-1; 0; 0; -1; -1; -1; -1; -1];
      hc20 = [-1; -1; 0; 0; -1; -1; -1; -1];
      hc21 = [-1; -1; -1; 0; 0; -1; -1; -1];
      hc22 = [-1; -1; -1; -1; 0; 0; -1; -1];
      hc23 = [-1; -1; -1; -1; -1; 0; 0; -1];
      hc24 = [-1; -1; -1; -1; -1; -1; 0; 0];
      
      H_index = cat(2,hc1,hc2,hc3,hc4,hc5,hc6,hc7,hc8,hc9,hc10,hc11,hc12,...
        hc13,hc14,hc15,hc16,hc17,hc18,hc19,hc20,hc21,hc22,hc23,hc24);
      
    case 3/4
      hc1 = [16; 25; 25; 9; 24; 2];
      hc2 = [17; 12; 18; 7; 5; 2];
      hc3 = [22; 12; 26; 0; 26; 19];
      hc4 = [24; 3; 16; 1; 7; 14];
      hc5 = [9; 3; 22; 17; 1; 24];
      hc6 = [3; 26; 23; -1; -1; 1];
      hc7 = [14; 6; 9; -1; -1; 15];
      hc8 = [-1; 21; -1; 7; 15; 19];
      hc9 = [4; -1; 0; 3; 24; -1];
      hc10 = [2; 15; -1; -1; 15; 21];
      hc11 = [7; 22; 4; 3; -1; -1];
      hc12 = [-1; -1; -1; 23; 8; 2];
      hc13 = [26; 15; 4; -1; -1; -1];
      hc14 = [-1; -1; -1; 16; 13; 24];
      hc15 = [2; 4; 8; -1; -1; -1];
      hc16 = [-1; -1; 23; -1; 13; 3];
      hc17 = [21; -1; 11; 21; -1; -1];
      hc18 = [-1; 16; -1; -1; 11; 2];
      hc19 = [1; -1; -1; 0; -1; 1];
      hc20 = [0; 0; -1; -1; -1; -1];
      hc21 = [-1; 0; 0; -1; -1; -1];
      hc22 = [-1; -1; 0; 0; -1; -1];
      hc23 = [-1; -1; -1; 0; 0; -1];
      hc24 = [-1; -1; -1; -1; 0; 0];
      
      H_index = cat(2,hc1,hc2,hc3,hc4,hc5,hc6,hc7,hc8,hc9,hc10,hc11,hc12,...
        hc13,hc14,hc15,hc16,hc17,hc18,hc19,hc20,hc21,hc22,hc23,hc24);
      
    case 5/6
      hc1 = [17; 3; 22; 7];
      hc2 = [13; 12; 16; 7];
      hc3 = [8; 11; 4; 14];
      hc4 = [21; 14; 3; 14];
      hc5 = [9; 11; 10; 4];
      hc6 = [3; 25; 21; 16];
      hc7 = [18; 5; 12; 16];
      hc8 = [12; 18; 5; 24];
      hc9 = [10; 0; 21; 24];
      hc10 = [0; 9; 14; 10];
      hc11 = [4; 2; 19; 1];
      hc12 = [15; 26; 5; 7];
      hc13 = [19; 26; -1; 15];
      hc14 = [2; 10; 8; 6];
      hc15 = [5; 24; 5; 10];
      hc16 = [10; 7; 18; 26];
      hc17 = [26; 14; 11; 8];
      hc18 = [19; 20; 5; 18];
      hc19 = [13; 4; 5; 21];
      hc20 = [13; 2; 15; 14];
      hc21 = [1; -1; 0; 1];
      hc22 = [0; 0; -1; -1];
      hc23 = [-1; 0; 0; -1];
      hc24 = [-1; -1; 0; 0];
      
      H_index = cat(2,hc1,hc2,hc3,hc4,hc5,hc6,hc7,hc8,hc9,hc10,hc11,hc12,...
        hc13,hc14,hc15,hc16,hc17,hc18,hc19,hc20,hc21,hc22,hc23,hc24);
      
    otherwise
      error('ldpc_matrix_80211n error: code rate is not supported');
  end
end

if n == 54
  
  switch code_rate
    
    case 1/2
      H_index = ...
        [40 -1 -1 -1 22 -1 49 23 43 -1 -1 -1 1 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1;
        50 1 -1 -1 48 35 -1 -1 13 -1 30 -1 -1 0 0 -1 -1 -1 -1 -1 -1 -1 -1 -1;
        39 50 -1 -1 4 -1 2 -1 -1 -1 -1 49 -1 -1 0 0 -1 -1 -1 -1 -1 -1 -1 -1;
        33 -1 -1 38 37 -1 -1 4 1 -1 -1 -1 -1 -1 -1 0 0 -1 -1 -1 -1 -1 -1 -1;
        45 -1 -1 -1 0 22 -1 -1 20 42 -1 -1 -1 -1 -1 -1 0 0 -1 -1 -1 -1 -1 -1;
        51 -1 -1 48 35 -1 -1 -1 44 -1 18 -1 -1 -1 -1 -1 -1 0 0 -1 -1 -1 -1 -1;
        47 11 -1 -1 -1 17 -1 -1 51 -1 -1 -1 0 -1 -1 -1 -1 -1 0 0 -1 -1 -1 -1;
        5 -1 25 -1 6 -1 45 -1 13 40 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0 -1 -1 -1;
        33 -1 -1 34 24 -1 -1 -1 23 -1 -1 46 -1 -1 -1 -1 -1 -1 -1 -1 0 0 -1 -1;
        1 -1 27 -1 1 -1 -1 -1 38 -1 44 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0 -1;
        -1 18 -1 -1 23 -1 -1 8 0 35 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0;
        49 -1 17 -1 30 -1 -1 -1 34 -1 -1 19 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0];
      
    case 2/3
      H_index =...
        [39 31 22 43 -1 40 4 -1 11 -1 -1 50 -1 -1 -1 6 1 0 -1 -1 -1 -1 -1 -1;
        25 52 41 2 6 -1 14 -1 34 -1 -1 -1 24 -1 37 -1 -1 0 0 -1 -1 -1 -1 -1;
        43 31 29 0 21 -1 28 -1 -1 2 -1 -1 7 -1 17 -1 -1 -1 0 0 -1 -1 -1 -1;
        20 33 48 -1 4 13 -1 26 -1 -1 22 -1 -1 46 42 -1 -1 -1 -1 0 0 -1 -1 -1;
        45 7 18 51 12 25 -1 -1 -1 50 -1 -1 5 -1 -1 -1 0 -1 -1 -1 0 0 -1 -1;
        35 40 32 16 5 -1 -1 18 -1 -1 43 51 -1 32 -1 -1 -1 -1 -1 -1 -1 0 0 -1;
        9 24 13 22 28 -1 -1 37 -1 -1 25 -1 -1 52 -1 13 -1 -1 -1 -1 -1 -1 0 0;
        32 22 4 21 16 -1 -1 -1 27 28 -1 38 -1 -1 -1 8 1 -1 -1 -1 -1 -1 -1 0];
      
    case 3/4
      H_index = ...
        [39 40 51 41 3 29 8 36 -1 14 -1 6 -1 33 -1 11 -1 4 1 0 -1 -1 -1 -1;
        48 21 47 9 48 35 51 -1 38 -1 28 -1 34 -1 50 -1 50 -1 -1 0 0 -1 -1 -1;
        30 39 28 42 50 39 5 17 -1 6 -1 18 -1 20 -1 15 -1 40 -1 -1 0 0 -1 -1;
        29 0  1 43 36 30 47 -1 49 -1 47 -1 3 -1 35 -1 34 -1 0 -1 -1 0 0 -1;
        1 32 11 23 10 44 12 7 -1 48 -1 4 -1 9 -1 17 -1 16 -1 -1 -1 -1 0 0;
        13 7 15 47 23 16 47 -1 43 -1 29 -1 52 -1 2 -1 53 -1 1 -1 -1 -1 -1 0];
    case 5/6
      H_index = ...
        [48 29 37 52 2 16 6 14 53 31 34 5 18 42 53 31 45 -1 46 52 1 0 -1 -1;
        17 4 30 7 43 11 24 6 14 21 6 39 17 40 47 7 15 41 19 -1 -1 0 0 -1;
        7 2 51 31 46 23 16 11 53 40 10 7 46 53 33 35 -1 25 35 38 0 -1 0 0;
        19 48 41 1 10 7 36 47 5 29 52 52 31 10 26 6 3 2 -1 51 1 -1 -1 0];
      
    otherwise
      error('ldpc_matrix_80211n error: code rate is not supported');
  end
end

if n == 81
  
  switch code_rate
    
    case 1/2
      H_index = ...
        [57 -1 -1 -1 50 -1 11 -1 50 -1 79 -1 1 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1;
        3 -1 28 -1 0 -1 -1 -1 55 7 -1 -1 -1 0 0 -1 -1 -1 -1 -1 -1 -1 -1 -1;
        30 -1 -1 -1 24 37 -1 -1 56 14 -1 -1 -1 -1 0 0 -1 -1 -1 -1 -1 -1 -1 -1;
        62 53 -1 -1 53 -1 -1 3 35 -1 -1 -1 -1 -1 -1 0 0 -1 -1 -1 -1 -1 -1 -1;
        40 -1 -1 20 66 -1 -1 22 28 -1 -1 -1 -1 -1 -1 -1 0 0 -1 -1 -1 -1 -1 -1;
        0 -1 -1 -1 8 -1 42 -1 50 -1 -1 8 -1 -1 -1 -1 -1 0 0 -1 -1 -1 -1 -1;
        69 79 79 -1 -1 -1 56 -1 52 -1 -1 -1 0 -1 -1 -1 -1 -1 0 0 -1 -1 -1 -1;
        65 -1 -1 -1 38 57 -1 -1 72 -1 27 -1 -1 -1 -1 -1 -1 -1 -1 0 0 -1 -1 -1;
        64 -1 -1 -1 14 52 -1 -1 30 -1 -1 32 -1 -1 -1 -1 -1 -1 -1 -1 0 0 -1 -1;
        -1 45 -1 70 0 -1 -1 -1 77 9 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0 -1;
        2 56 -1 57 35 -1 -1 -1 -1 -1 12 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0;
        24 -1 61 -1 60 -1 -1 27 51 -1 -1 16 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0];
      
    case 2/3
      H_index = ...
        [61 75 4 63 56 -1 -1 -1 -1 -1 -1 8 -1 2 17 25 1 0 -1 -1 -1 -1 -1 -1;
        56 74 77 20 -1 -1 -1 64 24 4 67 -1 7 -1 -1 -1 -1 0 0 -1 -1 -1 -1 -1;
        28 21 68 10 7 14 65 -1 -1 -1 23 -1 -1 -1 75 -1 -1 -1 0 0 -1 -1 -1 -1;
        48 38 43 78 76 -1 -1 -1 -1 5 36 -1 15 72 -1 -1 -1 -1 -1 0 0 -1 -1 -1;
        40 2 53 25 -1 52 62 -1 20 -1 -1 44 -1 -1 -1 -1 0 -1 -1 -1 0 0 -1 -1;
        69 23 64 10 22 -1 21 -1 -1 -1 -1 -1 68 23 29 -1 -1 -1 -1 -1 -1 0 0 -1;
        12 0 68 20 55 61 -1 40 -1 -1 -1 52 -1 -1 -1 44 -1 -1 -1 -1 -1 -1 0 0;
        58 8 34 64 78 -1 -1 11 78 24 -1 -1 -1 -1 -1 58 1 -1 -1 -1 -1 -1 -1 0];
      
    case 3/4
      H_index = ...
        [48 29 28 39 9 61 -1 -1 -1 63 45 80 -1 -1 -1 37 32 22 1 0 -1 -1 -1 -1;
        4 49 42 48 11 30 -1 -1 -1 49 17 41 37 15 -1 54 -1 -1 -1 0 0 -1 -1 -1;
        35 76 78 51 37 35 21 -1 17 64 -1 -1 -1 59 7 -1 -1 32 -1 -1 0 0 -1 -1;
        9 65 44 9 54 56 73 34 42 -1 -1 -1 35 -1 -1 -1 46 39 0 -1 -1 0 0 -1;
        3 62 7 80 68 26 -1 80 55 -1 36 -1 26 -1 9 -1 72 -1 -1 -1 -1 -1 0 0;
        26 75 33 21 69 59 3 38 -1 -1 -1 35 -1 62 36 26 -1 -1 1 -1 -1 -1 -1 0];
      
      
    case 5/6
      H_index = ...
        [13 48 80 66 4 74 7 30 76 52 37 60 -1 49 73 31 74 73 23 -1 1 0 -1 -1;
        69 63 74 56 64 77 57 65 6 16 51 -1 64 -1 68 9 48 62 54 27 -1 0 0 -1;
        51 15 0 80 24 25 42 54 44 71 71 9 67 35 -1 58 -1 29 -1 53 0 -1 0 0;
        16 29 36 41 44 56 59 37 50 24 -1 65 4 65 52 -1 4 -1 73 52 1 -1 -1 0];
      
    otherwise
      error('ldpc_matrix_80211n error: code rate is not supported');
  end
end

 